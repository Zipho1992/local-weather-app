{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Learning\\\\local-weather-app\\\\local-weather-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { injectSpy } from 'angular-unit-test-helper';\nimport { WeatherService } from '../weather/weather.service';\nimport { of } from 'rxjs';\nimport { CurrentWeatherComponent } from './current-weather.component';\nimport { fakeWeather } from '../weather/weather.service.fake';\ndescribe('CurrentWeatherComponent', () => {\n  let component;\n  let fixture;\n  let weatherServiceMock;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    const weatherServiceSpy = jasmine.createSpyObj('WeatherService', ['getCurrentWeather']);\n    yield TestBed.configureTestingModule({\n      declarations: [CurrentWeatherComponent],\n      providers: [{\n        provide: WeatherService,\n        useValue: weatherServiceSpy\n      }]\n    }).compileComponents();\n    weatherServiceMock = injectSpy(WeatherService);\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(CurrentWeatherComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    // Arrange\n    weatherServiceMock.getCurrentWeather.and.returnValue(of()); // Act\n\n    fixture.detectChanges(); // triggers ngOnit()\n    // Assert\n\n    expect(component).toBeTruthy();\n  });\n  it('should get currentWeather from weatherService', () => {\n    // Arrange\n    weatherServiceMock.getCurrentWeather.and.returnValue(of()); // Act\n\n    fixture.detectChanges(); // triggers ngOnit()\n    // Assert\n\n    expect(weatherServiceMock.getCurrentWeather).toHaveBeenCalledTimes(1);\n  });\n  it('should eagerly load currentWeather in New York from weatherService', () => {\n    // Arrange\n    weatherServiceMock.getCurrentWeather.and.returnValue(of(fakeWeather)); // Act\n\n    fixture.detectChanges(); // triggers ngOnit()\n    // Assert\n\n    expect(component.current).toBeDefined();\n    expect(component.current.city).toEqual('New York');\n    expect(component.current.temperature).toEqual(280.32); // Assert on DOM\n\n    const debugEl = fixture.debugElement;\n    const titleEl = debugEl.query(By);\n  });\n});","map":{"version":3,"sources":["C:/Learning/local-weather-app/local-weather-app/src/app/current-weather/current-weather.component.spec.ts"],"names":["TestBed","injectSpy","WeatherService","of","CurrentWeatherComponent","fakeWeather","describe","component","fixture","weatherServiceMock","beforeEach","weatherServiceSpy","jasmine","createSpyObj","configureTestingModule","declarations","providers","provide","useValue","compileComponents","createComponent","componentInstance","detectChanges","it","getCurrentWeather","and","returnValue","expect","toBeTruthy","toHaveBeenCalledTimes","current","toBeDefined","city","toEqual","temperature","debugEl","debugElement","titleEl","query","By"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACAC,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACtC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,kBAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMC,iBAAiB,GAAGC,OAAO,CAACC,YAAR,CAAqB,gBAArB,EAAuC,CAAC,mBAAD,CAAvC,CAA1B;AACA,UAAMb,OAAO,CAACc,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACX,uBAAD,CADmB;AAEjCY,MAAAA,SAAS,EAAE,CAAC;AACJC,QAAAA,OAAO,EAAEf,cADL;AACqBgB,QAAAA,QAAQ,EAAEP;AAD/B,OAAD;AAFsB,KAA/B,EAMDQ,iBANC,EAAN;AAOAV,IAAAA,kBAAkB,GAAGR,SAAS,CAACC,cAAD,CAA9B;AACH,GAVS,EAAV;AAWAQ,EAAAA,UAAU,CAAC,MAAM;AACbF,IAAAA,OAAO,GAAGR,OAAO,CAACoB,eAAR,CAAwBhB,uBAAxB,CAAV;AACAG,IAAAA,SAAS,GAAGC,OAAO,CAACa,iBAApB;AACAb,IAAAA,OAAO,CAACc,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtB;AACAd,IAAAA,kBAAkB,CAACe,iBAAnB,CAAqCC,GAArC,CAAyCC,WAAzC,CAAqDvB,EAAE,EAAvD,EAFsB,CAGtB;;AACAK,IAAAA,OAAO,CAACc,aAAR,GAJsB,CAIG;AACzB;;AACAK,IAAAA,MAAM,CAACpB,SAAD,CAAN,CAAkBqB,UAAlB;AACH,GAPC,CAAF;AAQAL,EAAAA,EAAE,CAAC,+CAAD,EAAkD,MAAM;AACtD;AACAd,IAAAA,kBAAkB,CAACe,iBAAnB,CAAqCC,GAArC,CAAyCC,WAAzC,CAAqDvB,EAAE,EAAvD,EAFsD,CAGtD;;AACAK,IAAAA,OAAO,CAACc,aAAR,GAJsD,CAI7B;AACzB;;AACAK,IAAAA,MAAM,CAAClB,kBAAkB,CAACe,iBAApB,CAAN,CAA6CK,qBAA7C,CAAmE,CAAnE;AACH,GAPC,CAAF;AAQAN,EAAAA,EAAE,CAAC,oEAAD,EAAuE,MAAM;AAC3E;AACAd,IAAAA,kBAAkB,CAACe,iBAAnB,CAAqCC,GAArC,CAAyCC,WAAzC,CAAqDvB,EAAE,CAACE,WAAD,CAAvD,EAF2E,CAG3E;;AACAG,IAAAA,OAAO,CAACc,aAAR,GAJ2E,CAIlD;AACzB;;AACAK,IAAAA,MAAM,CAACpB,SAAS,CAACuB,OAAX,CAAN,CAA0BC,WAA1B;AACAJ,IAAAA,MAAM,CAACpB,SAAS,CAACuB,OAAV,CAAkBE,IAAnB,CAAN,CAA+BC,OAA/B,CAAuC,UAAvC;AACAN,IAAAA,MAAM,CAACpB,SAAS,CAACuB,OAAV,CAAkBI,WAAnB,CAAN,CAAsCD,OAAtC,CAA8C,MAA9C,EAR2E,CAS3E;;AACA,UAAME,OAAO,GAAG3B,OAAO,CAAC4B,YAAxB;AACA,UAAMC,OAAO,GAAGF,OAAO,CAACG,KAAR,CAAcC,EAAd,CAAhB;AACH,GAZC,CAAF;AAaH,CAjDO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { injectSpy } from 'angular-unit-test-helper';\r\nimport { WeatherService } from '../weather/weather.service';\r\nimport { of } from 'rxjs';\r\nimport { CurrentWeatherComponent } from './current-weather.component';\r\nimport { fakeWeather } from '../weather/weather.service.fake';\r\ndescribe('CurrentWeatherComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let weatherServiceMock;\r\n    beforeEach(async () => {\r\n        const weatherServiceSpy = jasmine.createSpyObj('WeatherService', ['getCurrentWeather']);\r\n        await TestBed.configureTestingModule({\r\n            declarations: [CurrentWeatherComponent],\r\n            providers: [{\r\n                    provide: WeatherService, useValue: weatherServiceSpy\r\n                }]\r\n        })\r\n            .compileComponents();\r\n        weatherServiceMock = injectSpy(WeatherService);\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(CurrentWeatherComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        // Arrange\r\n        weatherServiceMock.getCurrentWeather.and.returnValue(of());\r\n        // Act\r\n        fixture.detectChanges(); // triggers ngOnit()\r\n        // Assert\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should get currentWeather from weatherService', () => {\r\n        // Arrange\r\n        weatherServiceMock.getCurrentWeather.and.returnValue(of());\r\n        // Act\r\n        fixture.detectChanges(); // triggers ngOnit()\r\n        // Assert\r\n        expect(weatherServiceMock.getCurrentWeather).toHaveBeenCalledTimes(1);\r\n    });\r\n    it('should eagerly load currentWeather in New York from weatherService', () => {\r\n        // Arrange\r\n        weatherServiceMock.getCurrentWeather.and.returnValue(of(fakeWeather));\r\n        // Act\r\n        fixture.detectChanges(); // triggers ngOnit()\r\n        // Assert\r\n        expect(component.current).toBeDefined();\r\n        expect(component.current.city).toEqual('New York');\r\n        expect(component.current.temperature).toEqual(280.32);\r\n        // Assert on DOM\r\n        const debugEl = fixture.debugElement;\r\n        const titleEl = debugEl.query(By);\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}